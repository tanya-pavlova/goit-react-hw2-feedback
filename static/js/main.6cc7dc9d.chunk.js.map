{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Section","title","children","className","styles","defaultProps","FeedbackOption","onLeaveFeedback","buttonContainer","type","name","onClick","button","Notification","message","Statistics","good","neutral","bad","total","positiveFeedback","feedback","App","state","toSetState","e","setState","prevState","target","countTotalFeedback","this","countPositiveFeedbackPercentage","Math","floor","FeedbackOptions","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,SAAW,+B,gBCA7BD,EAAOC,QAAU,CAAC,OAAS,gCAAgC,gBAAkB,2C,qBCA7ED,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,QAAU,gC,qKCGtBC,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,oCACI,oBAAIC,UAAWC,IAAOH,MAAtB,SAA8BA,IAC7BC,MAKbF,EAAQK,aAAe,CACnBJ,MAAO,cAQID,Q,gBCmBAM,EArCQ,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACtB,OACI,mCACI,sBAAKJ,UAAWC,IAAOI,gBAAvB,UACI,wBACIC,KAAK,SACLC,KAAK,OACLC,QAASJ,EACTJ,UAAWC,IAAOQ,OAJtB,kBAQA,wBACIH,KAAK,SACLC,KAAK,UACLC,QAASJ,EACTJ,UAAWC,IAAOQ,OAJtB,qBAQA,wBACIH,KAAK,SACLC,KAAK,MACLC,QAASJ,EACTJ,UAAWC,IAAOQ,OAJtB,uB,iBCVDC,EAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACI,oBAAIX,UAAWC,IAAOU,QAAtB,SAAgCA,K,gBCkBzBC,EApBI,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,iBAC7C,OACI,gCACI,oBAAGjB,UAAWC,IAAOiB,SAArB,mBAAsCL,KACtC,oBAAGb,UAAWC,IAAOiB,SAArB,sBAAyCJ,KACzC,oBAAGd,UAAWC,IAAOiB,SAArB,kBAAqCH,KACrC,oBAAGf,UAAWC,IAAOiB,SAArB,mBAAsCF,KACtC,oBAAGhB,UAAWC,IAAOiB,SAArB,+BAAkDD,EAAlD,WCqCGE,E,4MAzCbC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPM,WAAa,SAACC,GACZ,EAAKC,UAAS,SAACC,GAAD,sBACXF,EAAEG,OAAOlB,KAAOiB,EAAUF,EAAEG,OAAOlB,MAAQ,O,EAGhDmB,mBAAqB,WACnB,OAAOC,KAAKP,MAAMP,KAAOc,KAAKP,MAAMN,QAAUa,KAAKP,MAAML,K,EAG3Da,gCAAkC,WAChC,OAAOC,KAAKC,MAAyB,IAAlBH,KAAKP,MAAMP,KAAcc,KAAKD,uB,4CAEnD,WACE,IAAIV,EAAQW,KAAKD,qBACjB,OACE,qCACE,cAAC,EAAD,CAAS5B,MAAM,wBAAf,SACE,cAACiC,EAAD,CAAiB3B,gBAAiBuB,KAAKN,eAE9B,IAAVL,EACC,cAAC,EAAD,CAAcL,QAAQ,sBAEtB,cAAC,EAAD,UACE,cAAC,EAAD,CACEE,KAAMc,KAAKP,MAAMP,KACjBC,QAASa,KAAKP,MAAMN,QACpBC,IAAKY,KAAKP,MAAML,IAChBC,MAAOW,KAAKD,qBACZT,iBAAkBU,KAAKC,6C,GAlCnBI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6cc7dc9d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"Statistics_feedback__3mcTU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1CBqS\",\"buttonContainer\":\"FeedbackOptions_buttonContainer__oYFOO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__gLBzm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__1qjLp\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <section>\r\n            <h1 className={styles.title}>{title}</h1>\r\n            {children}\r\n        </section>\r\n    );\r\n};\r\n\r\nSection.defaultProps = {\r\n    title: \"Statistics\",\r\n};\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Section;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOption = ({ onLeaveFeedback }) => {\r\n    return (\r\n        <>\r\n            <div className={styles.buttonContainer}>\r\n                <button\r\n                    type=\"button\"\r\n                    name=\"good\"\r\n                    onClick={onLeaveFeedback}\r\n                    className={styles.button}\r\n                >\r\n                    Good\r\n      </button>\r\n                <button\r\n                    type=\"button\"\r\n                    name=\"neutral\"\r\n                    onClick={onLeaveFeedback}\r\n                    className={styles.button}\r\n                >\r\n                    Neutral\r\n      </button>\r\n                <button\r\n                    type=\"button\"\r\n                    name=\"bad\"\r\n                    onClick={onLeaveFeedback}\r\n                    className={styles.button}\r\n                >\r\n                    Bad\r\n      </button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nFeedbackOption.propTypes = {\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOption;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styles from \"./Notification.module.css\";\r\n\r\nconst Notification = ({ message }) => {\r\n    return (\r\n        <h2 className={styles.message}>{message}</h2>\r\n    )\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport styles from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positiveFeedback }) => {\r\n    return (\r\n        <div>\r\n            <p className={styles.feedback}>Good: {good}</p>\r\n            <p className={styles.feedback}>Neutral: {neutral}</p>\r\n            <p className={styles.feedback}>Bad: {bad}</p>\r\n            <p className={styles.feedback}>Total:{total}</p>\r\n            <p className={styles.feedback}>Positive feedback:{positiveFeedback}%</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n    total: PropTypes.number,\r\n    positiveFeedback: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;","import React, { Component } from 'react';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Notification from './components/Notification/Notification';\nimport Statistics from \"./components/Statistics/Statistics\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  toSetState = (e) => {\n    this.setState((prevState) => ({\n      [e.target.name]: prevState[e.target.name] + 1,\n    }));\n  };\n  countTotalFeedback = function () {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = function () {\n    return Math.floor((this.state.good * 100) / this.countTotalFeedback());\n  };\n  render() {\n    let total = this.countTotalFeedback();\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions onLeaveFeedback={this.toSetState} />\n        </Section>\n        {total === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Section>\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positiveFeedback={this.countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        )}\n      </>\n    );\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}